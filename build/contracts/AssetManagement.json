{
  "contractName": "AssetManagement",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminAddr",
          "type": "address"
        }
      ],
      "name": "addAdministrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetManagerAddr",
          "type": "address"
        }
      ],
      "name": "addAssetManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetProviderAddr",
          "type": "address"
        }
      ],
      "name": "addAssetProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetProviderManagerAddr",
          "type": "address"
        }
      ],
      "name": "addAssetProviderManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addAssetTypeToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetValidatorAddr",
          "type": "address"
        }
      ],
      "name": "addAssetValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetValidatorManagerAddr",
          "type": "address"
        }
      ],
      "name": "addAssetValidatorManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_financeAddr",
          "type": "address"
        }
      ],
      "name": "addFinance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_financeManagerAddr",
          "type": "address"
        }
      ],
      "name": "addFinanceManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminAddr",
          "type": "address"
        }
      ],
      "name": "isAdministrator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetManagerAddr",
          "type": "address"
        }
      ],
      "name": "isAssetManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetProviderAddr",
          "type": "address"
        }
      ],
      "name": "isAssetProvider",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetProviderManagerAddr",
          "type": "address"
        }
      ],
      "name": "isAssetProviderManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAssetSubdomainRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isAssetTypeWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAssetValidationRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetValidatorAddr",
          "type": "address"
        }
      ],
      "name": "isAssetValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetManagerAddr",
          "type": "address"
        }
      ],
      "name": "isAssetValidatorManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_financeAddr",
          "type": "address"
        }
      ],
      "name": "isFinance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_financeManagerAddr",
          "type": "address"
        }
      ],
      "name": "isFinanceManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownerAddr",
          "type": "address"
        }
      ],
      "name": "isOwnerRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSaleStrategyPerAssetRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSameCurrencyPerAssetRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isStakingAndSlashingSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isWhitelistedAssetProviderRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isWhitelistedAssetRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adminAddr",
          "type": "address"
        }
      ],
      "name": "removeAdministrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetManagerAddr",
          "type": "address"
        }
      ],
      "name": "removeAssetManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetProviderAddr",
          "type": "address"
        }
      ],
      "name": "removeAssetProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetProviderManagerAddr",
          "type": "address"
        }
      ],
      "name": "removeAssetProviderManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeAssetTypeFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetValidatorAddr",
          "type": "address"
        }
      ],
      "name": "removeAssetValidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_assetValidatorManagerAddr",
          "type": "address"
        }
      ],
      "name": "removeAssetValidatorManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_financeAddr",
          "type": "address"
        }
      ],
      "name": "removeFinance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_financeManagerAddr",
          "type": "address"
        }
      ],
      "name": "removeFinanceManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setRequireAssetSubdomain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setRequireAssetValidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setRequireSaleStrategyPerAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setRequireSameCurrencyPerAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setRequireWhitelistedAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setRequireWhitelistedAssetProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_newValue",
          "type": "bool"
        }
      ],
      "name": "setSupportsStakingSlashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "getAsset",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "validator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "deletage",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "internalType": "struct AssetValidationRecord[]",
              "name": "validatorHistory",
              "type": "tuple[]"
            },
            {
              "internalType": "enum AssetState",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "subdomain",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Asset",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "registerAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token_",
          "type": "address"
        }
      ],
      "name": "requestAssetRegistration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddr\",\"type\":\"address\"}],\"name\":\"addAdministrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetManagerAddr\",\"type\":\"address\"}],\"name\":\"addAssetManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetProviderAddr\",\"type\":\"address\"}],\"name\":\"addAssetProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetProviderManagerAddr\",\"type\":\"address\"}],\"name\":\"addAssetProviderManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addAssetTypeToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetValidatorAddr\",\"type\":\"address\"}],\"name\":\"addAssetValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetValidatorManagerAddr\",\"type\":\"address\"}],\"name\":\"addAssetValidatorManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_financeAddr\",\"type\":\"address\"}],\"name\":\"addFinance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_financeManagerAddr\",\"type\":\"address\"}],\"name\":\"addFinanceManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"getAsset\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deletage\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"internalType\":\"struct AssetValidationRecord[]\",\"name\":\"validatorHistory\",\"type\":\"tuple[]\"},{\"internalType\":\"enum AssetState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"subdomain\",\"type\":\"bytes32\"}],\"internalType\":\"struct Asset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddr\",\"type\":\"address\"}],\"name\":\"isAdministrator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetManagerAddr\",\"type\":\"address\"}],\"name\":\"isAssetManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetProviderAddr\",\"type\":\"address\"}],\"name\":\"isAssetProvider\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetProviderManagerAddr\",\"type\":\"address\"}],\"name\":\"isAssetProviderManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAssetSubdomainRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAssetTypeWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAssetValidationRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetValidatorAddr\",\"type\":\"address\"}],\"name\":\"isAssetValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetManagerAddr\",\"type\":\"address\"}],\"name\":\"isAssetValidatorManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_financeAddr\",\"type\":\"address\"}],\"name\":\"isFinance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_financeManagerAddr\",\"type\":\"address\"}],\"name\":\"isFinanceManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddr\",\"type\":\"address\"}],\"name\":\"isOwnerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSaleStrategyPerAssetRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSameCurrencyPerAssetRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isStakingAndSlashingSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistedAssetProviderRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistedAssetRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"registerAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddr\",\"type\":\"address\"}],\"name\":\"removeAdministrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetManagerAddr\",\"type\":\"address\"}],\"name\":\"removeAssetManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetProviderAddr\",\"type\":\"address\"}],\"name\":\"removeAssetProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetProviderManagerAddr\",\"type\":\"address\"}],\"name\":\"removeAssetProviderManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeAssetTypeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetValidatorAddr\",\"type\":\"address\"}],\"name\":\"removeAssetValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_assetValidatorManagerAddr\",\"type\":\"address\"}],\"name\":\"removeAssetValidatorManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_financeAddr\",\"type\":\"address\"}],\"name\":\"removeFinance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_financeManagerAddr\",\"type\":\"address\"}],\"name\":\"removeFinanceManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"requestAssetRegistration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRequireAssetSubdomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRequireAssetValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRequireSaleStrategyPerAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRequireSameCurrencyPerAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRequireWhitelistedAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setRequireWhitelistedAssetProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_newValue\",\"type\":\"bool\"}],\"name\":\"setSupportsStakingSlashing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"RIF Protocols Team @IOVLabs\",\"details\":\"Partial marketplace contract, defining asset state transitions\",\"kind\":\"dev\",\"methods\":{\"addAdministrator(address)\":{\"details\":\"Grants address all MANAGER roles. Only executable by the owner.\"},\"addAssetManager(address)\":{\"details\":\"Grants address the ASSET_MANAGER role.\"},\"addAssetValidator(address)\":{\"details\":\"Grants address the ASSET_VALIDATOR role.\"},\"addAssetValidatorManager(address)\":{\"details\":\"Grants address the ASSET_VALIDATOR_MANAGER role.\"},\"addFinance(address)\":{\"details\":\"Grants address the FINANCE role.\"},\"addFinanceManager(address)\":{\"details\":\"Grants address the FINANCE_MANAGER role.\"},\"getAsset(address)\":{\"custom:one\":\"state - InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered\",\"custom:two\":\"subdomain - bytes32;\",\"custom:zero\":\"validatorHistory - [{ address validator, address deletage, bool approved }]\",\"params\":{\"token_\":\"address of the token\"},\"returns\":{\"_0\":\"Asset - which would be an array of:\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdministrator(address)\":{\"details\":\"Returns `true` if address has been granted the ADMINISTRATOR role \"},\"isAssetManager(address)\":{\"details\":\"Returns `true` if address has been granted the ASSET_MANAGER role \"},\"isAssetProvider(address)\":{\"details\":\"Returns `true` if address has been granted the ASSET_PROVIDER role \"},\"isAssetProviderManager(address)\":{\"details\":\"Returns `true` if address has been granted the ASSET_PROVIDER_MANAGER role \"},\"isAssetSubdomainRequired()\":{\"details\":\"Returns `true` if asset subdomain is enabled \"},\"isAssetValidationRequired()\":{\"details\":\"Returns `true` if asset validation is enabled \"},\"isAssetValidator(address)\":{\"details\":\"Returns `true` if address has been granted the ASSET_VALIDATOR role \"},\"isAssetValidatorManager(address)\":{\"details\":\"Returns `true` if address has been granted the ASSET_VALIDATOR_MANAGER role \"},\"isFinance(address)\":{\"details\":\"Returns `true` if address has been granted the FINANCE role \"},\"isFinanceManager(address)\":{\"details\":\"Returns `true` if address has been granted the FINANCE_MANAGER role \"},\"isOwnerRole(address)\":{\"details\":\"Returns `true` if address has been granted the OWNER role.\"},\"isSaleStrategyPerAssetRequired()\":{\"details\":\"Returns `true` if per-asset sale strategy is enabled \"},\"isSameCurrencyPerAssetRequired()\":{\"details\":\"Returns `true` if all assets use the same set of whitelisted currencies \"},\"isStakingAndSlashingSupported()\":{\"details\":\"Returns `true` if staking and slashing is enabled \"},\"isWhitelistedAssetProviderRequired()\":{\"details\":\"Returns `true` if asset provider whitelisting is enabled \"},\"isWhitelistedAssetRequired()\":{\"details\":\"Returns `true` if asset type whitelisting is enabled \"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerAsset(address)\":{\"details\":\"virtual method to be implemented in the concrete contract for it requires access to RNS definitions\",\"params\":{\"token_\":\"address of the _token\"}},\"removeAdministrator(address)\":{\"details\":\"Revoikes address all MANAGER roles. Only executable by the owner.\"},\"removeAssetManager(address)\":{\"details\":\"Revokes address the ASSET_MANAGER role.\"},\"removeAssetProvider(address)\":{\"details\":\"Revokes address the ASSET_PROVIDER role.\"},\"removeAssetProviderManager(address)\":{\"details\":\"Revokes address the ASSET_PROVIDER_MANAGER role.\"},\"removeAssetValidator(address)\":{\"details\":\"Revokes address the ASSET_VALIDATOR role.\"},\"removeAssetValidatorManager(address)\":{\"details\":\"Revokes address the ASSET_VALIDATOR_MANAGER role.\"},\"removeFinance(address)\":{\"details\":\"Revokes address the FINANCE role.\"},\"removeFinanceManager(address)\":{\"details\":\"Revokes address the FINANCE_MANAGER role.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"requestAssetRegistration(address)\":{\"custom:throws\":\"\\\"Asset type not allowed\\\" if asset whitelisting is required and not satisfied\\\"Provider not whitelisted\\\" if such whitelisting is required and not satisfied\",\"details\":\"first it transitions to ReadyToRegister (if no validation is required or it has been approved), before the next state transition to AssetRegistered\",\"params\":{\"token_\":\"address of the _token\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setRequireAssetSubdomain(bool)\":{\"details\":\"sets a new value for requireAssetSubdomain Only executable by the contract owner. \"},\"setRequireAssetValidation(bool)\":{\"details\":\"sets a new value for requireAssetValidation Only executable by the contract owner. \"},\"setRequireSaleStrategyPerAsset(bool)\":{\"details\":\"sets a new value for requireSaleStrategyPerAsset Only executable by the contract owner. \"},\"setRequireSameCurrencyPerAsset(bool)\":{\"details\":\"sets a new value for requireSameCurrencyPerAsset Only executable by the contract owner. \"},\"setRequireWhitelistedAsset(bool)\":{\"details\":\"sets a new value for requireWhitelistedAssetType Only executable by the contract owner. \"},\"setRequireWhitelistedAssetProvider(bool)\":{\"details\":\"sets a new value for requireWhitelistedAssetProvider Only executable by the contract owner. \"},\"setSupportsStakingSlashing(bool)\":{\"details\":\"sets a new value for supportStakingAndSlashing Only executable by the contract owner. \"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AssetManagement\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAssetProvider(address)\":{\"notice\":\"Grants address the ASSET_PROVIDER role.\"},\"addAssetProviderManager(address)\":{\"notice\":\"Grants address the ASSET_PROVIDER_MANAGER role.\"},\"getAsset(address)\":{\"notice\":\"Retreives Asset information of a token\"},\"registerAsset(address)\":{\"notice\":\"transitions an Asset to `AssetRegistered` state if it is in the `ReadyToRegister` state\"},\"requestAssetRegistration(address)\":{\"notice\":\"Makes necessary checks and transitions to either AssetRegistered or PendingValidation state (if asset validation is required).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/asset/AssetManagement.sol\":\"AssetManagement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb9a137b317dc4806805f2259686186c0c053c32d80fe9c15ecdbf2eb1cf52849\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8910762bea89696c6dc68a63be98c6ddd597955f8a29418661cc99d0ce090663\",\"dweb:/ipfs/Qmed14MXXFdNYE22bCuVy5XVAMKUo1DncY8BF8VkyrvXmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/access/IMarketplaceAccessControl.sol\":{\"keccak256\":\"0x9d494f7a4ec975c421829b353f95023c97d12e89abf9aa384331545b5024e6e7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://693d84ef8aa25244a78fa57a6ac22eec079ef6243346f1314c233eb79efabc17\",\"dweb:/ipfs/QmduhpqLMPn6GRtrc6oQyeZHxAwFbP9izMrKwN6Qtnc5Ld\"]},\"project:/contracts/access/MarketplaceAccessControl.sol\":{\"keccak256\":\"0x6726e768c6fd4dff7c27997d6f75103fdd13a64e5e0115e159ebeea67c7f670d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5e5fb1e21c9c7da289898048709faa3cb8d8b49e4aa94b55695dfbd3fdc15990\",\"dweb:/ipfs/QmUt76i59o32vxQCBJsdLBYoMzx4ZFjSgaYcMUvZuUB3wz\"]},\"project:/contracts/asset/Asset.sol\":{\"keccak256\":\"0xae48c06002c5da643de2a06b70b796b5162c10caf7fe7030f91d059b6d5a0708\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://47c4aa8bc65471fc2e8682239fe9bb335fa2d0677a8ce1fbad07ac65d9b8458e\",\"dweb:/ipfs/QmRHVfQ31QgXVd9HXf6aAv1ztgNVzn3wCtmjqaXuMKVnRD\"]},\"project:/contracts/asset/AssetManagement.sol\":{\"keccak256\":\"0x3e5fb533605a1faa4af6cc392d953aa4539e338e0c5c86b8088377d75f3c66e0\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ca30b900a7e51d2f767deb987074c7641d2f73c3df86c2b9700923d7fef82381\",\"dweb:/ipfs/QmeGjpHfMtincQUtggu2MJL3Scfg12h98cn2PbGxGAR1GK\"]},\"project:/contracts/config/IMarketplaceConfiguration.sol\":{\"keccak256\":\"0x935f0283d693fbc37ec8a2845fb1a14f9c1aae94f285ef92175e8ebcb6bb8125\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://338369aa5c624ef3a5601f637066d6e5fc25ec1c8c8c487320cff773cf432fde\",\"dweb:/ipfs/QmUetR7C8pjEuUL79jA119JpQZwuH3TnmeLPt8MEX11uEq\"]},\"project:/contracts/config/MarketplaceConfiguration.sol\":{\"keccak256\":\"0x2280e5d23edf7be077a0f3a7b93fede09aa5fe89c8b3e6a2f9ca78c58db2f08a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://26296cffe80adf3081a9fe23df4c535c1701513b11f9b9d8a094ba9620f1e8d1\",\"dweb:/ipfs/QmYdk8Ydfz8CN1sGoYSwpChpSvYJar1tthHBbDAEPZ5c6t\"]},\"project:/contracts/whitelist/AssetTypeWhitelist.sol\":{\"keccak256\":\"0x3e0d395b85c7e201e8885ce9f5bc6103825c5217c666d567975dbe863ec6958a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://514debcb565533fdacbf19e3ebeddb3e74e28f19cf46b7653cd5fdd539803739\",\"dweb:/ipfs/QmNbsXYxoHpb3sVfWD1WrZZwP16jjZT1Ewk3iw53no2W19\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity ^0.8.4;\n\nimport {MarketplaceConfiguration} from \"../config/MarketplaceConfiguration.sol\";\nimport {ASSET_PROVIDER} from \"../access/MarketplaceAccessControl.sol\";\nimport {AssetTypeWhitelist} from \"../whitelist/AssetTypeWhitelist.sol\";\nimport {Asset, AssetState, AssetValidationRecord} from \"./Asset.sol\";\n\n/**\n    @author RIF Protocols Team @IOVLabs\n    @title AssetManagement\n\n    @dev Partial marketplace contract, defining asset state transitions\n */\nabstract contract AssetManagement is\n    MarketplaceConfiguration,\n    AssetTypeWhitelist\n{\n    mapping(address => Asset) internal _tokenToAsset;\n\n    modifier tokenInState(address token_, AssetState state_) {\n        require(\n            _tokenToAsset[token_].state == state_,\n            \"Incorrect state transition\"\n        );\n        _;\n    }\n\n    /**\n        @notice Retreives Asset information of a token\n        @param token_ address of the token\n        @return Asset - which would be an array of:\n        @custom:zero validatorHistory - [{ address validator, address deletage, bool approved }]\n        @custom:one state - InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered\n        @custom:two subdomain - bytes32;\n    */\n    function getAsset(address token_) external view returns (Asset memory) {\n        return _tokenToAsset[token_];\n    }\n\n    /**\n        @dev Assigns a subdomain to an Asset\n        @param token_ address of the _token\n        @param subdomain_ hashed name of the subdomain\n    */\n    function _setSubdomain(address token_, bytes32 subdomain_) internal {\n        _tokenToAsset[token_].subdomain = subdomain_;\n    }\n\n    /**\n        @notice Transisions an Asset to a different state\n        @dev Transisions an Asset to a different state. The state property of the Asset that the token points to will change according to the state parameter\n        @param token_ address of the _token\n        @param state_ InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered\n    */\n    function _transitionAsset(address token_, AssetState state_) internal {\n        _tokenToAsset[token_].state = state_;\n    }\n\n    /**\n        @dev Makes use of the error messaging of the AssetTypeWhitelist\n        @param token_ address of the _token\n        @return true\n        @custom:throws accordng to AssetTypeWhitelist.onlyWhitelistedAssetType\n    */\n    function _checkAssetWL(address token_)\n        internal\n        view\n        onlyWhitelistedAssetType(token_)\n        returns (bool)\n    {\n        return true;\n    }\n\n    /**\n        @dev Makes use of the error messaging of the AccessControl\n        @return true\n        @custom:throws accordng to AccessControl.onlyRole\n    */\n    function _checkAssetProviderWL()\n        internal\n        view\n        onlyRole(ASSET_PROVIDER)\n        returns (bool)\n    {\n        return true;\n    }\n\n    /**\n        @notice transitions an Asset to `AssetRegistered` state if it is in the `ReadyToRegister` state\n        @dev virtual method to be implemented in the concrete contract for it requires access to RNS definitions\n        @param token_ address of the _token\n     */\n    function registerAsset(address token_) external virtual;\n\n    /**\n        @notice Makes necessary checks and transitions to either AssetRegistered or PendingValidation state (if asset validation is required).\n        @dev first it transitions to ReadyToRegister (if no validation is required or it has been approved), before the next state transition to AssetRegistered\n        @param token_ address of the _token\n        @custom:throws \"Asset type not allowed\" if asset whitelisting is required and not satisfied\n        @custom:throws \"Provider not whitelisted\" if such whitelisting is required and not satisfied\n    */\n    function requestAssetRegistration(address token_)\n        external\n        tokenInState(token_, AssetState.InitialState)\n    {\n        if (_requireWhitelistedAssetType) {\n            _checkAssetWL(token_);\n        }\n        if (_requireWhitelistedAssetProvider) {\n            _checkAssetProviderWL();\n        }\n\n        if (_requireAssetValidation) {\n            _transitionAsset(token_, AssetState.PendingValidation);\n            return ();\n        }\n\n        _transitionAsset(token_, AssetState.ReadyToRegister);\n        this.registerAsset(token_);\n    }\n\n    function _evaluateToken(\n        address token_,\n        address validator_,\n        bool approve_\n    ) internal {\n        _transitionAsset(\n            token_,\n            approve_ ? AssetState.ReadyToRegister : AssetState.AssetInvalidated\n        );\n\n        AssetValidationRecord memory validationRecord = AssetValidationRecord(\n            msg.sender,\n            validator_,\n            approve_\n        );\n\n        _tokenToAsset[token_].validatorHistory.push(validationRecord);\n    }\n}\n",
  "sourcePath": "/Users/rjauregui/RIF_MKTV2/rif-marketplace-engine-integration-tests/contracts/asset/AssetManagement.sol",
  "ast": {
    "absolutePath": "project:/contracts/asset/AssetManagement.sol",
    "exportedSymbols": {
      "ASSET_PROVIDER": [
        2486
      ],
      "Asset": [
        3060
      ],
      "AssetManagement": [
        3267
      ],
      "AssetState": [
        3050
      ],
      "AssetTypeWhitelist": [
        4065
      ],
      "AssetValidationRecord": [
        3044
      ],
      "MarketplaceConfiguration": [
        3736
      ]
    },
    "id": 3268,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3062,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:19"
      },
      {
        "absolutePath": "project:/contracts/config/MarketplaceConfiguration.sol",
        "file": "../config/MarketplaceConfiguration.sol",
        "id": 3064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3737,
        "src": "71:80:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3063,
              "name": "MarketplaceConfiguration",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "79:24:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/access/MarketplaceAccessControl.sol",
        "file": "../access/MarketplaceAccessControl.sol",
        "id": 3066,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3036,
        "src": "152:70:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3065,
              "name": "ASSET_PROVIDER",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "160:14:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/whitelist/AssetTypeWhitelist.sol",
        "file": "../whitelist/AssetTypeWhitelist.sol",
        "id": 3068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 4066,
        "src": "223:71:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3067,
              "name": "AssetTypeWhitelist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "231:18:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/asset/Asset.sol",
        "file": "./Asset.sol",
        "id": 3072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3061,
        "src": "295:69:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3069,
              "name": "Asset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "303:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3070,
              "name": "AssetState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "310:10:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3071,
              "name": "AssetValidationRecord",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "322:21:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3074,
              "name": "MarketplaceConfiguration",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3736,
              "src": "555:24:19"
            },
            "id": 3075,
            "nodeType": "InheritanceSpecifier",
            "src": "555:24:19"
          },
          {
            "baseName": {
              "id": 3076,
              "name": "AssetTypeWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4065,
              "src": "585:18:19"
            },
            "id": 3077,
            "nodeType": "InheritanceSpecifier",
            "src": "585:18:19"
          }
        ],
        "canonicalName": "AssetManagement",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3073,
          "nodeType": "StructuredDocumentation",
          "src": "366:147:19",
          "text": "@author RIF Protocols Team @IOVLabs\n@title AssetManagement\n@dev Partial marketplace contract, defining asset state transitions"
        },
        "fullyImplemented": false,
        "id": 3267,
        "linearizedBaseContracts": [
          3267,
          4065,
          3736,
          3475,
          3035,
          486,
          308,
          1601,
          1613,
          381,
          1300,
          2433
        ],
        "name": "AssetManagement",
        "nameLocation": "532:15:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3082,
            "mutability": "mutable",
            "name": "_tokenToAsset",
            "nameLocation": "645:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "610:48:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
              "typeString": "mapping(address => struct Asset)"
            },
            "typeName": {
              "id": 3081,
              "keyType": {
                "id": 3078,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "618:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "610:25:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                "typeString": "mapping(address => struct Asset)"
              },
              "valueType": {
                "id": 3080,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3079,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3060,
                  "src": "629:5:19"
                },
                "referencedDeclaration": 3060,
                "src": "629:5:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Asset_$3060_storage_ptr",
                  "typeString": "struct Asset"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3100,
              "nodeType": "Block",
              "src": "722:138:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        },
                        "id": 3095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3090,
                              "name": "_tokenToAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3082,
                              "src": "753:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                                "typeString": "mapping(address => struct Asset storage ref)"
                              }
                            },
                            "id": 3092,
                            "indexExpression": {
                              "id": 3091,
                              "name": "token_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3084,
                              "src": "767:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "753:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$3060_storage",
                              "typeString": "struct Asset storage ref"
                            }
                          },
                          "id": 3093,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3057,
                          "src": "753:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3094,
                          "name": "state_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3087,
                          "src": "784:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "src": "753:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207374617465207472616e736974696f6e",
                        "id": 3096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "804:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c20812eaf561dc6f64977f9d4af5368c41bb7102e5ade1d73dc0ea6370e4740d",
                          "typeString": "literal_string \"Incorrect state transition\""
                        },
                        "value": "Incorrect state transition"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c20812eaf561dc6f64977f9d4af5368c41bb7102e5ade1d73dc0ea6370e4740d",
                          "typeString": "literal_string \"Incorrect state transition\""
                        }
                      ],
                      "id": 3089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "732:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3098,
                  "nodeType": "ExpressionStatement",
                  "src": "732:110:19"
                },
                {
                  "id": 3099,
                  "nodeType": "PlaceholderStatement",
                  "src": "852:1:19"
                }
              ]
            },
            "id": 3101,
            "name": "tokenInState",
            "nameLocation": "674:12:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3084,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "695:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3101,
                  "src": "687:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3087,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "714:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3101,
                  "src": "703:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AssetState_$3050",
                    "typeString": "enum AssetState"
                  },
                  "typeName": {
                    "id": 3086,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3085,
                      "name": "AssetState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3050,
                      "src": "703:10:19"
                    },
                    "referencedDeclaration": 3050,
                    "src": "703:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:35:19"
            },
            "src": "665:195:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3114,
              "nodeType": "Block",
              "src": "1360:45:19",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3110,
                      "name": "_tokenToAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "1377:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                        "typeString": "mapping(address => struct Asset storage ref)"
                      }
                    },
                    "id": 3112,
                    "indexExpression": {
                      "id": 3111,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3104,
                      "src": "1391:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1377:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$3060_storage",
                      "typeString": "struct Asset storage ref"
                    }
                  },
                  "functionReturnParameters": 3109,
                  "id": 3113,
                  "nodeType": "Return",
                  "src": "1370:28:19"
                }
              ]
            },
            "documentation": {
              "id": 3102,
              "nodeType": "StructuredDocumentation",
              "src": "866:418:19",
              "text": "@notice Retreives Asset information of a token\n@param token_ address of the token\n@return Asset - which would be an array of:\n@custom:zero validatorHistory - [{ address validator, address deletage, bool approved }]\n@custom:one state - InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered\n@custom:two subdomain - bytes32;"
            },
            "functionSelector": "30b8b2c6",
            "id": 3115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAsset",
            "nameLocation": "1298:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3104,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1315:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3115,
                  "src": "1307:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:16:19"
            },
            "returnParameters": {
              "id": 3109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3115,
                  "src": "1346:12:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$3060_memory_ptr",
                    "typeString": "struct Asset"
                  },
                  "typeName": {
                    "id": 3107,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3106,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3060,
                      "src": "1346:5:19"
                    },
                    "referencedDeclaration": 3060,
                    "src": "1346:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$3060_storage_ptr",
                      "typeString": "struct Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1345:14:19"
            },
            "scope": 3267,
            "src": "1289:116:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3130,
              "nodeType": "Block",
              "src": "1638:61:19",
              "statements": [
                {
                  "expression": {
                    "id": 3128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3123,
                          "name": "_tokenToAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3082,
                          "src": "1648:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                            "typeString": "mapping(address => struct Asset storage ref)"
                          }
                        },
                        "id": 3125,
                        "indexExpression": {
                          "id": 3124,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3118,
                          "src": "1662:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1648:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$3060_storage",
                          "typeString": "struct Asset storage ref"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "subdomain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3059,
                      "src": "1648:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3127,
                      "name": "subdomain_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "1682:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1648:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3129,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:44:19"
                }
              ]
            },
            "documentation": {
              "id": 3116,
              "nodeType": "StructuredDocumentation",
              "src": "1411:154:19",
              "text": "@dev Assigns a subdomain to an Asset\n@param token_ address of the _token\n@param subdomain_ hashed name of the subdomain"
            },
            "id": 3131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSubdomain",
            "nameLocation": "1579:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3118,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1601:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "1593:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3120,
                  "mutability": "mutable",
                  "name": "subdomain_",
                  "nameLocation": "1617:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "1609:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3119,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:36:19"
            },
            "returnParameters": {
              "id": 3122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:19"
            },
            "scope": 3267,
            "src": "1570:129:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "2164:53:19",
              "statements": [
                {
                  "expression": {
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3140,
                          "name": "_tokenToAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3082,
                          "src": "2174:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                            "typeString": "mapping(address => struct Asset storage ref)"
                          }
                        },
                        "id": 3142,
                        "indexExpression": {
                          "id": 3141,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3134,
                          "src": "2188:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2174:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$3060_storage",
                          "typeString": "struct Asset storage ref"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3057,
                      "src": "2174:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AssetState_$3050",
                        "typeString": "enum AssetState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3144,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3137,
                      "src": "2204:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AssetState_$3050",
                        "typeString": "enum AssetState"
                      }
                    },
                    "src": "2174:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:36:19"
                }
              ]
            },
            "documentation": {
              "id": 3132,
              "nodeType": "StructuredDocumentation",
              "src": "1705:384:19",
              "text": "@notice Transisions an Asset to a different state\n@dev Transisions an Asset to a different state. The state property of the Asset that the token points to will change according to the state parameter\n@param token_ address of the _token\n@param state_ InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered"
            },
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transitionAsset",
            "nameLocation": "2103:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3134,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "2128:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "2120:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3137,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "2147:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "2136:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AssetState_$3050",
                    "typeString": "enum AssetState"
                  },
                  "typeName": {
                    "id": 3136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3135,
                      "name": "AssetState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3050,
                      "src": "2136:10:19"
                    },
                    "referencedDeclaration": 3050,
                    "src": "2136:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:35:19"
            },
            "returnParameters": {
              "id": 3139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:0:19"
            },
            "scope": 3267,
            "src": "2094:123:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3161,
              "nodeType": "Block",
              "src": "2591:28:19",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2608:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3158,
                  "id": 3160,
                  "nodeType": "Return",
                  "src": "2601:11:19"
                }
              ]
            },
            "documentation": {
              "id": 3149,
              "nodeType": "StructuredDocumentation",
              "src": "2223:226:19",
              "text": "@dev Makes use of the error messaging of the AssetTypeWhitelist\n@param token_ address of the _token\n@return true\n@custom:throws accordng to AssetTypeWhitelist.onlyWhitelistedAssetType"
            },
            "id": 3162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3154,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3151,
                    "src": "2556:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3153,
                  "name": "onlyWhitelistedAssetType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4064,
                  "src": "2531:24:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2531:32:19"
              }
            ],
            "name": "_checkAssetWL",
            "nameLocation": "2463:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3151,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "2485:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2477:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2476:16:19"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2581:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2580:6:19"
            },
            "scope": 3267,
            "src": "2454:165:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3173,
              "nodeType": "Block",
              "src": "2909:28:19",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2926:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3170,
                  "id": 3172,
                  "nodeType": "Return",
                  "src": "2919:11:19"
                }
              ]
            },
            "documentation": {
              "id": 3163,
              "nodeType": "StructuredDocumentation",
              "src": "2625:156:19",
              "text": "@dev Makes use of the error messaging of the AccessControl\n@return true\n@custom:throws accordng to AccessControl.onlyRole"
            },
            "id": 3174,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3166,
                    "name": "ASSET_PROVIDER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2486,
                    "src": "2866:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3165,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2857:8:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2857:24:19"
              }
            ],
            "name": "_checkAssetProviderWL",
            "nameLocation": "2795:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2816:2:19"
            },
            "returnParameters": {
              "id": 3170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3174,
                  "src": "2899:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2898:6:19"
            },
            "scope": 3267,
            "src": "2786:151:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 3175,
              "nodeType": "StructuredDocumentation",
              "src": "2943:272:19",
              "text": "@notice transitions an Asset to `AssetRegistered` state if it is in the `ReadyToRegister` state\n@dev virtual method to be implemented in the concrete contract for it requires access to RNS definitions\n@param token_ address of the _token"
            },
            "functionSelector": "d312998f",
            "id": 3180,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsset",
            "nameLocation": "3229:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3177,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "3251:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "3243:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:16:19"
            },
            "returnParameters": {
              "id": 3179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:0:19"
            },
            "scope": 3267,
            "src": "3220:56:19",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3227,
              "nodeType": "Block",
              "src": "3971:431:19",
              "statements": [
                {
                  "condition": {
                    "id": 3191,
                    "name": "_requireWhitelistedAssetType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3492,
                    "src": "3985:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3197,
                  "nodeType": "IfStatement",
                  "src": "3981:80:19",
                  "trueBody": {
                    "id": 3196,
                    "nodeType": "Block",
                    "src": "4015:46:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3193,
                              "name": "token_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3183,
                              "src": "4043:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3192,
                            "name": "_checkAssetWL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3162,
                            "src": "4029:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 3194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:21:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3195,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:21:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 3198,
                    "name": "_requireWhitelistedAssetProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3494,
                    "src": "4074:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3203,
                  "nodeType": "IfStatement",
                  "src": "4070:86:19",
                  "trueBody": {
                    "id": 3202,
                    "nodeType": "Block",
                    "src": "4108:48:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3199,
                            "name": "_checkAssetProviderWL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3174,
                            "src": "4122:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4122:23:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3201,
                        "nodeType": "ExpressionStatement",
                        "src": "4122:23:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 3204,
                    "name": "_requireAssetValidation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3496,
                    "src": "4170:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3214,
                  "nodeType": "IfStatement",
                  "src": "4166:131:19",
                  "trueBody": {
                    "id": 3213,
                    "nodeType": "Block",
                    "src": "4195:102:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3206,
                              "name": "token_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3183,
                              "src": "4226:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3207,
                                "name": "AssetState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3050,
                                "src": "4234:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                                  "typeString": "type(enum AssetState)"
                                }
                              },
                              "id": 3208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PendingValidation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3046,
                              "src": "4234:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AssetState_$3050",
                                "typeString": "enum AssetState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_AssetState_$3050",
                                "typeString": "enum AssetState"
                              }
                            ],
                            "id": 3205,
                            "name": "_transitionAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3148,
                            "src": "4209:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AssetState_$3050_$returns$__$",
                              "typeString": "function (address,enum AssetState)"
                            }
                          },
                          "id": 3209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4209:54:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3210,
                        "nodeType": "ExpressionStatement",
                        "src": "4209:54:19"
                      },
                      {
                        "expression": {
                          "components": [],
                          "id": 3211,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4284:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 3190,
                        "id": 3212,
                        "nodeType": "Return",
                        "src": "4277:9:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3216,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "4324:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3217,
                          "name": "AssetState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3050,
                          "src": "4332:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                            "typeString": "type(enum AssetState)"
                          }
                        },
                        "id": 3218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ReadyToRegister",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3047,
                        "src": "4332:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      ],
                      "id": 3215,
                      "name": "_transitionAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3148,
                      "src": "4307:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AssetState_$3050_$returns$__$",
                        "typeString": "function (address,enum AssetState)"
                      }
                    },
                    "id": 3219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4307:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3220,
                  "nodeType": "ExpressionStatement",
                  "src": "4307:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3224,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "4388:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3221,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "4369:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetManagement_$3267",
                          "typeString": "contract AssetManagement"
                        }
                      },
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3180,
                      "src": "4369:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:26:19"
                }
              ]
            },
            "documentation": {
              "id": 3181,
              "nodeType": "StructuredDocumentation",
              "src": "3282:559:19",
              "text": "@notice Makes necessary checks and transitions to either AssetRegistered or PendingValidation state (if asset validation is required).\n@dev first it transitions to ReadyToRegister (if no validation is required or it has been approved), before the next state transition to AssetRegistered\n@param token_ address of the _token\n@custom:throws \"Asset type not allowed\" if asset whitelisting is required and not satisfied\n@custom:throws \"Provider not whitelisted\" if such whitelisting is required and not satisfied"
            },
            "functionSelector": "03adf449",
            "id": 3228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3186,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3183,
                    "src": "3934:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 3187,
                      "name": "AssetState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "3942:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                        "typeString": "type(enum AssetState)"
                      }
                    },
                    "id": 3188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "InitialState",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3045,
                    "src": "3942:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  }
                ],
                "id": 3189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3185,
                  "name": "tokenInState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3101,
                  "src": "3921:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3921:45:19"
              }
            ],
            "name": "requestAssetRegistration",
            "nameLocation": "3855:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3183,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "3888:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "3880:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3879:16:19"
            },
            "returnParameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3971:0:19"
            },
            "scope": 3267,
            "src": "3846:556:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3265,
              "nodeType": "Block",
              "src": "4522:376:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3238,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "4562:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 3239,
                          "name": "approve_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3234,
                          "src": "4582:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 3242,
                            "name": "AssetState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "4622:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                              "typeString": "type(enum AssetState)"
                            }
                          },
                          "id": 3243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetInvalidated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3048,
                          "src": "4622:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4582:67:19",
                        "trueExpression": {
                          "expression": {
                            "id": 3240,
                            "name": "AssetState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "4593:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                              "typeString": "type(enum AssetState)"
                            }
                          },
                          "id": 3241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ReadyToRegister",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3047,
                          "src": "4593:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      ],
                      "id": 3237,
                      "name": "_transitionAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3148,
                      "src": "4532:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AssetState_$3050_$returns$__$",
                        "typeString": "function (address,enum AssetState)"
                      }
                    },
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4532:127:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3246,
                  "nodeType": "ExpressionStatement",
                  "src": "4532:127:19"
                },
                {
                  "assignments": [
                    3249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3249,
                      "mutability": "mutable",
                      "name": "validationRecord",
                      "nameLocation": "4699:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3265,
                      "src": "4670:45:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                        "typeString": "struct AssetValidationRecord"
                      },
                      "typeName": {
                        "id": 3248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3247,
                          "name": "AssetValidationRecord",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3044,
                          "src": "4670:21:19"
                        },
                        "referencedDeclaration": 3044,
                        "src": "4670:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_storage_ptr",
                          "typeString": "struct AssetValidationRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3256,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4753:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4753:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3253,
                        "name": "validator_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "4777:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3254,
                        "name": "approve_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3234,
                        "src": "4801:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3250,
                      "name": "AssetValidationRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "4718:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AssetValidationRecord_$3044_storage_ptr_$",
                        "typeString": "type(struct AssetValidationRecord storage pointer)"
                      }
                    },
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:101:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                      "typeString": "struct AssetValidationRecord memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4670:149:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3262,
                        "name": "validationRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "4874:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                          "typeString": "struct AssetValidationRecord memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                          "typeString": "struct AssetValidationRecord memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 3257,
                            "name": "_tokenToAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3082,
                            "src": "4830:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                              "typeString": "mapping(address => struct Asset storage ref)"
                            }
                          },
                          "id": 3259,
                          "indexExpression": {
                            "id": 3258,
                            "name": "token_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3230,
                            "src": "4844:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4830:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$3060_storage",
                            "typeString": "struct Asset storage ref"
                          }
                        },
                        "id": 3260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "validatorHistory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3054,
                        "src": "4830:38:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AssetValidationRecord_$3044_storage_$dyn_storage",
                          "typeString": "struct AssetValidationRecord storage ref[] storage ref"
                        }
                      },
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4830:43:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetValidationRecord_$3044_storage_$dyn_storage_ptr_$_t_struct$_AssetValidationRecord_$3044_storage_$returns$__$bound_to$_t_array$_t_struct$_AssetValidationRecord_$3044_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct AssetValidationRecord storage ref[] storage pointer,struct AssetValidationRecord storage ref)"
                      }
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4830:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3264,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:61:19"
                }
              ]
            },
            "id": 3266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_evaluateToken",
            "nameLocation": "4417:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "4449:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "4441:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3232,
                  "mutability": "mutable",
                  "name": "validator_",
                  "nameLocation": "4473:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "4465:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3234,
                  "mutability": "mutable",
                  "name": "approve_",
                  "nameLocation": "4498:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "4493:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4493:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4431:81:19"
            },
            "returnParameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4522:0:19"
            },
            "scope": 3267,
            "src": "4408:490:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3268,
        "src": "514:4386:19",
        "usedErrors": []
      }
    ],
    "src": "46:4855:19"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/asset/AssetManagement.sol",
    "exportedSymbols": {
      "ASSET_PROVIDER": [
        2486
      ],
      "Asset": [
        3060
      ],
      "AssetManagement": [
        3267
      ],
      "AssetState": [
        3050
      ],
      "AssetTypeWhitelist": [
        4065
      ],
      "AssetValidationRecord": [
        3044
      ],
      "MarketplaceConfiguration": [
        3736
      ]
    },
    "id": 3268,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3062,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:19"
      },
      {
        "absolutePath": "project:/contracts/config/MarketplaceConfiguration.sol",
        "file": "../config/MarketplaceConfiguration.sol",
        "id": 3064,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3737,
        "src": "71:80:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3063,
              "name": "MarketplaceConfiguration",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "79:24:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/access/MarketplaceAccessControl.sol",
        "file": "../access/MarketplaceAccessControl.sol",
        "id": 3066,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3036,
        "src": "152:70:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3065,
              "name": "ASSET_PROVIDER",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "160:14:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/whitelist/AssetTypeWhitelist.sol",
        "file": "../whitelist/AssetTypeWhitelist.sol",
        "id": 3068,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 4066,
        "src": "223:71:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3067,
              "name": "AssetTypeWhitelist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "231:18:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/asset/Asset.sol",
        "file": "./Asset.sol",
        "id": 3072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3268,
        "sourceUnit": 3061,
        "src": "295:69:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3069,
              "name": "Asset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "303:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3070,
              "name": "AssetState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "310:10:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3071,
              "name": "AssetValidationRecord",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "322:21:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3074,
              "name": "MarketplaceConfiguration",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3736,
              "src": "555:24:19"
            },
            "id": 3075,
            "nodeType": "InheritanceSpecifier",
            "src": "555:24:19"
          },
          {
            "baseName": {
              "id": 3076,
              "name": "AssetTypeWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4065,
              "src": "585:18:19"
            },
            "id": 3077,
            "nodeType": "InheritanceSpecifier",
            "src": "585:18:19"
          }
        ],
        "canonicalName": "AssetManagement",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3073,
          "nodeType": "StructuredDocumentation",
          "src": "366:147:19",
          "text": "@author RIF Protocols Team @IOVLabs\n@title AssetManagement\n@dev Partial marketplace contract, defining asset state transitions"
        },
        "fullyImplemented": false,
        "id": 3267,
        "linearizedBaseContracts": [
          3267,
          4065,
          3736,
          3475,
          3035,
          486,
          308,
          1601,
          1613,
          381,
          1300,
          2433
        ],
        "name": "AssetManagement",
        "nameLocation": "532:15:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3082,
            "mutability": "mutable",
            "name": "_tokenToAsset",
            "nameLocation": "645:13:19",
            "nodeType": "VariableDeclaration",
            "scope": 3267,
            "src": "610:48:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
              "typeString": "mapping(address => struct Asset)"
            },
            "typeName": {
              "id": 3081,
              "keyType": {
                "id": 3078,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "618:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "610:25:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                "typeString": "mapping(address => struct Asset)"
              },
              "valueType": {
                "id": 3080,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3079,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3060,
                  "src": "629:5:19"
                },
                "referencedDeclaration": 3060,
                "src": "629:5:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Asset_$3060_storage_ptr",
                  "typeString": "struct Asset"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3100,
              "nodeType": "Block",
              "src": "722:138:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        },
                        "id": 3095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3090,
                              "name": "_tokenToAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3082,
                              "src": "753:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                                "typeString": "mapping(address => struct Asset storage ref)"
                              }
                            },
                            "id": 3092,
                            "indexExpression": {
                              "id": 3091,
                              "name": "token_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3084,
                              "src": "767:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "753:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Asset_$3060_storage",
                              "typeString": "struct Asset storage ref"
                            }
                          },
                          "id": 3093,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3057,
                          "src": "753:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3094,
                          "name": "state_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3087,
                          "src": "784:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "src": "753:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207374617465207472616e736974696f6e",
                        "id": 3096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "804:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c20812eaf561dc6f64977f9d4af5368c41bb7102e5ade1d73dc0ea6370e4740d",
                          "typeString": "literal_string \"Incorrect state transition\""
                        },
                        "value": "Incorrect state transition"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c20812eaf561dc6f64977f9d4af5368c41bb7102e5ade1d73dc0ea6370e4740d",
                          "typeString": "literal_string \"Incorrect state transition\""
                        }
                      ],
                      "id": 3089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "732:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3098,
                  "nodeType": "ExpressionStatement",
                  "src": "732:110:19"
                },
                {
                  "id": 3099,
                  "nodeType": "PlaceholderStatement",
                  "src": "852:1:19"
                }
              ]
            },
            "id": 3101,
            "name": "tokenInState",
            "nameLocation": "674:12:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3084,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "695:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3101,
                  "src": "687:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3087,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "714:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3101,
                  "src": "703:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AssetState_$3050",
                    "typeString": "enum AssetState"
                  },
                  "typeName": {
                    "id": 3086,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3085,
                      "name": "AssetState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3050,
                      "src": "703:10:19"
                    },
                    "referencedDeclaration": 3050,
                    "src": "703:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:35:19"
            },
            "src": "665:195:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3114,
              "nodeType": "Block",
              "src": "1360:45:19",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3110,
                      "name": "_tokenToAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3082,
                      "src": "1377:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                        "typeString": "mapping(address => struct Asset storage ref)"
                      }
                    },
                    "id": 3112,
                    "indexExpression": {
                      "id": 3111,
                      "name": "token_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3104,
                      "src": "1391:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1377:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$3060_storage",
                      "typeString": "struct Asset storage ref"
                    }
                  },
                  "functionReturnParameters": 3109,
                  "id": 3113,
                  "nodeType": "Return",
                  "src": "1370:28:19"
                }
              ]
            },
            "documentation": {
              "id": 3102,
              "nodeType": "StructuredDocumentation",
              "src": "866:418:19",
              "text": "@notice Retreives Asset information of a token\n@param token_ address of the token\n@return Asset - which would be an array of:\n@custom:zero validatorHistory - [{ address validator, address deletage, bool approved }]\n@custom:one state - InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered\n@custom:two subdomain - bytes32;"
            },
            "functionSelector": "30b8b2c6",
            "id": 3115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAsset",
            "nameLocation": "1298:8:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3104,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1315:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3115,
                  "src": "1307:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:16:19"
            },
            "returnParameters": {
              "id": 3109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3115,
                  "src": "1346:12:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Asset_$3060_memory_ptr",
                    "typeString": "struct Asset"
                  },
                  "typeName": {
                    "id": 3107,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3106,
                      "name": "Asset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3060,
                      "src": "1346:5:19"
                    },
                    "referencedDeclaration": 3060,
                    "src": "1346:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Asset_$3060_storage_ptr",
                      "typeString": "struct Asset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1345:14:19"
            },
            "scope": 3267,
            "src": "1289:116:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3130,
              "nodeType": "Block",
              "src": "1638:61:19",
              "statements": [
                {
                  "expression": {
                    "id": 3128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3123,
                          "name": "_tokenToAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3082,
                          "src": "1648:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                            "typeString": "mapping(address => struct Asset storage ref)"
                          }
                        },
                        "id": 3125,
                        "indexExpression": {
                          "id": 3124,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3118,
                          "src": "1662:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1648:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$3060_storage",
                          "typeString": "struct Asset storage ref"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "subdomain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3059,
                      "src": "1648:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3127,
                      "name": "subdomain_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "1682:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1648:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3129,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:44:19"
                }
              ]
            },
            "documentation": {
              "id": 3116,
              "nodeType": "StructuredDocumentation",
              "src": "1411:154:19",
              "text": "@dev Assigns a subdomain to an Asset\n@param token_ address of the _token\n@param subdomain_ hashed name of the subdomain"
            },
            "id": 3131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSubdomain",
            "nameLocation": "1579:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3118,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "1601:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "1593:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3120,
                  "mutability": "mutable",
                  "name": "subdomain_",
                  "nameLocation": "1617:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3131,
                  "src": "1609:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3119,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1609:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:36:19"
            },
            "returnParameters": {
              "id": 3122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:19"
            },
            "scope": 3267,
            "src": "1570:129:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3147,
              "nodeType": "Block",
              "src": "2164:53:19",
              "statements": [
                {
                  "expression": {
                    "id": 3145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3140,
                          "name": "_tokenToAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3082,
                          "src": "2174:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                            "typeString": "mapping(address => struct Asset storage ref)"
                          }
                        },
                        "id": 3142,
                        "indexExpression": {
                          "id": 3141,
                          "name": "token_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3134,
                          "src": "2188:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2174:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Asset_$3060_storage",
                          "typeString": "struct Asset storage ref"
                        }
                      },
                      "id": 3143,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3057,
                      "src": "2174:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AssetState_$3050",
                        "typeString": "enum AssetState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3144,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3137,
                      "src": "2204:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AssetState_$3050",
                        "typeString": "enum AssetState"
                      }
                    },
                    "src": "2174:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  },
                  "id": 3146,
                  "nodeType": "ExpressionStatement",
                  "src": "2174:36:19"
                }
              ]
            },
            "documentation": {
              "id": 3132,
              "nodeType": "StructuredDocumentation",
              "src": "1705:384:19",
              "text": "@notice Transisions an Asset to a different state\n@dev Transisions an Asset to a different state. The state property of the Asset that the token points to will change according to the state parameter\n@param token_ address of the _token\n@param state_ InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered"
            },
            "id": 3148,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transitionAsset",
            "nameLocation": "2103:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3134,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "2128:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "2120:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3137,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "2147:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3148,
                  "src": "2136:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AssetState_$3050",
                    "typeString": "enum AssetState"
                  },
                  "typeName": {
                    "id": 3136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3135,
                      "name": "AssetState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3050,
                      "src": "2136:10:19"
                    },
                    "referencedDeclaration": 3050,
                    "src": "2136:10:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:35:19"
            },
            "returnParameters": {
              "id": 3139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2164:0:19"
            },
            "scope": 3267,
            "src": "2094:123:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3161,
              "nodeType": "Block",
              "src": "2591:28:19",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2608:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3158,
                  "id": 3160,
                  "nodeType": "Return",
                  "src": "2601:11:19"
                }
              ]
            },
            "documentation": {
              "id": 3149,
              "nodeType": "StructuredDocumentation",
              "src": "2223:226:19",
              "text": "@dev Makes use of the error messaging of the AssetTypeWhitelist\n@param token_ address of the _token\n@return true\n@custom:throws accordng to AssetTypeWhitelist.onlyWhitelistedAssetType"
            },
            "id": 3162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3154,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3151,
                    "src": "2556:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3153,
                  "name": "onlyWhitelistedAssetType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4064,
                  "src": "2531:24:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2531:32:19"
              }
            ],
            "name": "_checkAssetWL",
            "nameLocation": "2463:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3151,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "2485:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2477:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2476:16:19"
            },
            "returnParameters": {
              "id": 3158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3162,
                  "src": "2581:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2580:6:19"
            },
            "scope": 3267,
            "src": "2454:165:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3173,
              "nodeType": "Block",
              "src": "2909:28:19",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2926:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3170,
                  "id": 3172,
                  "nodeType": "Return",
                  "src": "2919:11:19"
                }
              ]
            },
            "documentation": {
              "id": 3163,
              "nodeType": "StructuredDocumentation",
              "src": "2625:156:19",
              "text": "@dev Makes use of the error messaging of the AccessControl\n@return true\n@custom:throws accordng to AccessControl.onlyRole"
            },
            "id": 3174,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3166,
                    "name": "ASSET_PROVIDER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2486,
                    "src": "2866:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 3167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3165,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2857:8:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "2857:24:19"
              }
            ],
            "name": "_checkAssetProviderWL",
            "nameLocation": "2795:21:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2816:2:19"
            },
            "returnParameters": {
              "id": 3170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3174,
                  "src": "2899:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2898:6:19"
            },
            "scope": 3267,
            "src": "2786:151:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 3175,
              "nodeType": "StructuredDocumentation",
              "src": "2943:272:19",
              "text": "@notice transitions an Asset to `AssetRegistered` state if it is in the `ReadyToRegister` state\n@dev virtual method to be implemented in the concrete contract for it requires access to RNS definitions\n@param token_ address of the _token"
            },
            "functionSelector": "d312998f",
            "id": 3180,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsset",
            "nameLocation": "3229:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3177,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "3251:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3180,
                  "src": "3243:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3243:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:16:19"
            },
            "returnParameters": {
              "id": 3179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:0:19"
            },
            "scope": 3267,
            "src": "3220:56:19",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3227,
              "nodeType": "Block",
              "src": "3971:431:19",
              "statements": [
                {
                  "condition": {
                    "id": 3191,
                    "name": "_requireWhitelistedAssetType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3492,
                    "src": "3985:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3197,
                  "nodeType": "IfStatement",
                  "src": "3981:80:19",
                  "trueBody": {
                    "id": 3196,
                    "nodeType": "Block",
                    "src": "4015:46:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3193,
                              "name": "token_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3183,
                              "src": "4043:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3192,
                            "name": "_checkAssetWL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3162,
                            "src": "4029:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 3194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:21:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3195,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:21:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 3198,
                    "name": "_requireWhitelistedAssetProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3494,
                    "src": "4074:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3203,
                  "nodeType": "IfStatement",
                  "src": "4070:86:19",
                  "trueBody": {
                    "id": 3202,
                    "nodeType": "Block",
                    "src": "4108:48:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3199,
                            "name": "_checkAssetProviderWL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3174,
                            "src": "4122:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4122:23:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3201,
                        "nodeType": "ExpressionStatement",
                        "src": "4122:23:19"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 3204,
                    "name": "_requireAssetValidation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3496,
                    "src": "4170:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3214,
                  "nodeType": "IfStatement",
                  "src": "4166:131:19",
                  "trueBody": {
                    "id": 3213,
                    "nodeType": "Block",
                    "src": "4195:102:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3206,
                              "name": "token_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3183,
                              "src": "4226:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3207,
                                "name": "AssetState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3050,
                                "src": "4234:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                                  "typeString": "type(enum AssetState)"
                                }
                              },
                              "id": 3208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PendingValidation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3046,
                              "src": "4234:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AssetState_$3050",
                                "typeString": "enum AssetState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_AssetState_$3050",
                                "typeString": "enum AssetState"
                              }
                            ],
                            "id": 3205,
                            "name": "_transitionAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3148,
                            "src": "4209:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AssetState_$3050_$returns$__$",
                              "typeString": "function (address,enum AssetState)"
                            }
                          },
                          "id": 3209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4209:54:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3210,
                        "nodeType": "ExpressionStatement",
                        "src": "4209:54:19"
                      },
                      {
                        "expression": {
                          "components": [],
                          "id": 3211,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4284:2:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 3190,
                        "id": 3212,
                        "nodeType": "Return",
                        "src": "4277:9:19"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3216,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "4324:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3217,
                          "name": "AssetState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3050,
                          "src": "4332:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                            "typeString": "type(enum AssetState)"
                          }
                        },
                        "id": 3218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ReadyToRegister",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3047,
                        "src": "4332:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      ],
                      "id": 3215,
                      "name": "_transitionAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3148,
                      "src": "4307:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AssetState_$3050_$returns$__$",
                        "typeString": "function (address,enum AssetState)"
                      }
                    },
                    "id": 3219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4307:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3220,
                  "nodeType": "ExpressionStatement",
                  "src": "4307:52:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3224,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3183,
                        "src": "4388:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3221,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "4369:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetManagement_$3267",
                          "typeString": "contract AssetManagement"
                        }
                      },
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3180,
                      "src": "4369:18:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4369:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "4369:26:19"
                }
              ]
            },
            "documentation": {
              "id": 3181,
              "nodeType": "StructuredDocumentation",
              "src": "3282:559:19",
              "text": "@notice Makes necessary checks and transitions to either AssetRegistered or PendingValidation state (if asset validation is required).\n@dev first it transitions to ReadyToRegister (if no validation is required or it has been approved), before the next state transition to AssetRegistered\n@param token_ address of the _token\n@custom:throws \"Asset type not allowed\" if asset whitelisting is required and not satisfied\n@custom:throws \"Provider not whitelisted\" if such whitelisting is required and not satisfied"
            },
            "functionSelector": "03adf449",
            "id": 3228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3186,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3183,
                    "src": "3934:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 3187,
                      "name": "AssetState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3050,
                      "src": "3942:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                        "typeString": "type(enum AssetState)"
                      }
                    },
                    "id": 3188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "InitialState",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3045,
                    "src": "3942:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AssetState_$3050",
                      "typeString": "enum AssetState"
                    }
                  }
                ],
                "id": 3189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3185,
                  "name": "tokenInState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3101,
                  "src": "3921:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3921:45:19"
              }
            ],
            "name": "requestAssetRegistration",
            "nameLocation": "3855:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3183,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "3888:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3228,
                  "src": "3880:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3879:16:19"
            },
            "returnParameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3971:0:19"
            },
            "scope": 3267,
            "src": "3846:556:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3265,
              "nodeType": "Block",
              "src": "4522:376:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3238,
                        "name": "token_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "4562:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "condition": {
                          "id": 3239,
                          "name": "approve_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3234,
                          "src": "4582:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "expression": {
                            "id": 3242,
                            "name": "AssetState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "4622:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                              "typeString": "type(enum AssetState)"
                            }
                          },
                          "id": 3243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetInvalidated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3048,
                          "src": "4622:27:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4582:67:19",
                        "trueExpression": {
                          "expression": {
                            "id": 3240,
                            "name": "AssetState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "4593:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AssetState_$3050_$",
                              "typeString": "type(enum AssetState)"
                            }
                          },
                          "id": 3241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ReadyToRegister",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3047,
                          "src": "4593:26:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AssetState_$3050",
                            "typeString": "enum AssetState"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AssetState_$3050",
                          "typeString": "enum AssetState"
                        }
                      ],
                      "id": 3237,
                      "name": "_transitionAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3148,
                      "src": "4532:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_enum$_AssetState_$3050_$returns$__$",
                        "typeString": "function (address,enum AssetState)"
                      }
                    },
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4532:127:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3246,
                  "nodeType": "ExpressionStatement",
                  "src": "4532:127:19"
                },
                {
                  "assignments": [
                    3249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3249,
                      "mutability": "mutable",
                      "name": "validationRecord",
                      "nameLocation": "4699:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 3265,
                      "src": "4670:45:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                        "typeString": "struct AssetValidationRecord"
                      },
                      "typeName": {
                        "id": 3248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3247,
                          "name": "AssetValidationRecord",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3044,
                          "src": "4670:21:19"
                        },
                        "referencedDeclaration": 3044,
                        "src": "4670:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_storage_ptr",
                          "typeString": "struct AssetValidationRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3256,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4753:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4753:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3253,
                        "name": "validator_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3232,
                        "src": "4777:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3254,
                        "name": "approve_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3234,
                        "src": "4801:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3250,
                      "name": "AssetValidationRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "4718:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_AssetValidationRecord_$3044_storage_ptr_$",
                        "typeString": "type(struct AssetValidationRecord storage pointer)"
                      }
                    },
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4718:101:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                      "typeString": "struct AssetValidationRecord memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4670:149:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3262,
                        "name": "validationRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3249,
                        "src": "4874:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                          "typeString": "struct AssetValidationRecord memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AssetValidationRecord_$3044_memory_ptr",
                          "typeString": "struct AssetValidationRecord memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 3257,
                            "name": "_tokenToAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3082,
                            "src": "4830:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Asset_$3060_storage_$",
                              "typeString": "mapping(address => struct Asset storage ref)"
                            }
                          },
                          "id": 3259,
                          "indexExpression": {
                            "id": 3258,
                            "name": "token_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3230,
                            "src": "4844:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4830:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Asset_$3060_storage",
                            "typeString": "struct Asset storage ref"
                          }
                        },
                        "id": 3260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "validatorHistory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3054,
                        "src": "4830:38:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AssetValidationRecord_$3044_storage_$dyn_storage",
                          "typeString": "struct AssetValidationRecord storage ref[] storage ref"
                        }
                      },
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4830:43:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetValidationRecord_$3044_storage_$dyn_storage_ptr_$_t_struct$_AssetValidationRecord_$3044_storage_$returns$__$bound_to$_t_array$_t_struct$_AssetValidationRecord_$3044_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct AssetValidationRecord storage ref[] storage pointer,struct AssetValidationRecord storage ref)"
                      }
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4830:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3264,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:61:19"
                }
              ]
            },
            "id": 3266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_evaluateToken",
            "nameLocation": "4417:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3230,
                  "mutability": "mutable",
                  "name": "token_",
                  "nameLocation": "4449:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "4441:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3232,
                  "mutability": "mutable",
                  "name": "validator_",
                  "nameLocation": "4473:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "4465:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3234,
                  "mutability": "mutable",
                  "name": "approve_",
                  "nameLocation": "4498:8:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 3266,
                  "src": "4493:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4493:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4431:81:19"
            },
            "returnParameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4522:0:19"
            },
            "scope": 3267,
            "src": "4408:490:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3268,
        "src": "514:4386:19",
        "usedErrors": []
      }
    ],
    "src": "46:4855:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-22T21:29:30.828Z",
  "devdoc": {
    "author": "RIF Protocols Team @IOVLabs",
    "details": "Partial marketplace contract, defining asset state transitions",
    "kind": "dev",
    "methods": {
      "addAdministrator(address)": {
        "details": "Grants address all MANAGER roles. Only executable by the owner."
      },
      "addAssetManager(address)": {
        "details": "Grants address the ASSET_MANAGER role."
      },
      "addAssetValidator(address)": {
        "details": "Grants address the ASSET_VALIDATOR role."
      },
      "addAssetValidatorManager(address)": {
        "details": "Grants address the ASSET_VALIDATOR_MANAGER role."
      },
      "addFinance(address)": {
        "details": "Grants address the FINANCE role."
      },
      "addFinanceManager(address)": {
        "details": "Grants address the FINANCE_MANAGER role."
      },
      "getAsset(address)": {
        "custom:one": "state - InitialState = 0 | PendingValidation | ReadyToRegister | AssetInvalidated | AssetRegistered",
        "custom:two": "subdomain - bytes32;",
        "custom:zero": "validatorHistory - [{ address validator, address deletage, bool approved }]",
        "params": {
          "token_": "address of the token"
        },
        "returns": {
          "_0": "Asset - which would be an array of:"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isAdministrator(address)": {
        "details": "Returns `true` if address has been granted the ADMINISTRATOR role "
      },
      "isAssetManager(address)": {
        "details": "Returns `true` if address has been granted the ASSET_MANAGER role "
      },
      "isAssetProvider(address)": {
        "details": "Returns `true` if address has been granted the ASSET_PROVIDER role "
      },
      "isAssetProviderManager(address)": {
        "details": "Returns `true` if address has been granted the ASSET_PROVIDER_MANAGER role "
      },
      "isAssetSubdomainRequired()": {
        "details": "Returns `true` if asset subdomain is enabled "
      },
      "isAssetValidationRequired()": {
        "details": "Returns `true` if asset validation is enabled "
      },
      "isAssetValidator(address)": {
        "details": "Returns `true` if address has been granted the ASSET_VALIDATOR role "
      },
      "isAssetValidatorManager(address)": {
        "details": "Returns `true` if address has been granted the ASSET_VALIDATOR_MANAGER role "
      },
      "isFinance(address)": {
        "details": "Returns `true` if address has been granted the FINANCE role "
      },
      "isFinanceManager(address)": {
        "details": "Returns `true` if address has been granted the FINANCE_MANAGER role "
      },
      "isOwnerRole(address)": {
        "details": "Returns `true` if address has been granted the OWNER role."
      },
      "isSaleStrategyPerAssetRequired()": {
        "details": "Returns `true` if per-asset sale strategy is enabled "
      },
      "isSameCurrencyPerAssetRequired()": {
        "details": "Returns `true` if all assets use the same set of whitelisted currencies "
      },
      "isStakingAndSlashingSupported()": {
        "details": "Returns `true` if staking and slashing is enabled "
      },
      "isWhitelistedAssetProviderRequired()": {
        "details": "Returns `true` if asset provider whitelisting is enabled "
      },
      "isWhitelistedAssetRequired()": {
        "details": "Returns `true` if asset type whitelisting is enabled "
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registerAsset(address)": {
        "details": "virtual method to be implemented in the concrete contract for it requires access to RNS definitions",
        "params": {
          "token_": "address of the _token"
        }
      },
      "removeAdministrator(address)": {
        "details": "Revoikes address all MANAGER roles. Only executable by the owner."
      },
      "removeAssetManager(address)": {
        "details": "Revokes address the ASSET_MANAGER role."
      },
      "removeAssetProvider(address)": {
        "details": "Revokes address the ASSET_PROVIDER role."
      },
      "removeAssetProviderManager(address)": {
        "details": "Revokes address the ASSET_PROVIDER_MANAGER role."
      },
      "removeAssetValidator(address)": {
        "details": "Revokes address the ASSET_VALIDATOR role."
      },
      "removeAssetValidatorManager(address)": {
        "details": "Revokes address the ASSET_VALIDATOR_MANAGER role."
      },
      "removeFinance(address)": {
        "details": "Revokes address the FINANCE role."
      },
      "removeFinanceManager(address)": {
        "details": "Revokes address the FINANCE_MANAGER role."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "requestAssetRegistration(address)": {
        "custom:throws": "\"Asset type not allowed\" if asset whitelisting is required and not satisfied\"Provider not whitelisted\" if such whitelisting is required and not satisfied",
        "details": "first it transitions to ReadyToRegister (if no validation is required or it has been approved), before the next state transition to AssetRegistered",
        "params": {
          "token_": "address of the _token"
        }
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "setRequireAssetSubdomain(bool)": {
        "details": "sets a new value for requireAssetSubdomain Only executable by the contract owner. "
      },
      "setRequireAssetValidation(bool)": {
        "details": "sets a new value for requireAssetValidation Only executable by the contract owner. "
      },
      "setRequireSaleStrategyPerAsset(bool)": {
        "details": "sets a new value for requireSaleStrategyPerAsset Only executable by the contract owner. "
      },
      "setRequireSameCurrencyPerAsset(bool)": {
        "details": "sets a new value for requireSameCurrencyPerAsset Only executable by the contract owner. "
      },
      "setRequireWhitelistedAsset(bool)": {
        "details": "sets a new value for requireWhitelistedAssetType Only executable by the contract owner. "
      },
      "setRequireWhitelistedAssetProvider(bool)": {
        "details": "sets a new value for requireWhitelistedAssetProvider Only executable by the contract owner. "
      },
      "setSupportsStakingSlashing(bool)": {
        "details": "sets a new value for supportStakingAndSlashing Only executable by the contract owner. "
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "AssetManagement",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAssetProvider(address)": {
        "notice": "Grants address the ASSET_PROVIDER role."
      },
      "addAssetProviderManager(address)": {
        "notice": "Grants address the ASSET_PROVIDER_MANAGER role."
      },
      "getAsset(address)": {
        "notice": "Retreives Asset information of a token"
      },
      "registerAsset(address)": {
        "notice": "transitions an Asset to `AssetRegistered` state if it is in the `ReadyToRegister` state"
      },
      "requestAssetRegistration(address)": {
        "notice": "Makes necessary checks and transitions to either AssetRegistered or PendingValidation state (if asset validation is required)."
      }
    },
    "version": 1
  }
}